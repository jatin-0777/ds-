#include <stdio.h>
#include <stdlib.h>
#define MAX_SIZE 100

typedef struct {
    int arr[MAX_SIZE];
    int front;
    int rear;
} Queue;

void initializeQueue(Queue *q) {
    q->front = -1;
    q->rear = -1;
}
int isEmpty(Queue *q) {
    return (q->front == -1 && q->rear == -1);
}
int isFull(Queue *q) {
    return (q->rear == MAX_SIZE - 1);
}
void enqueue(Queue *q, int data) {
    if (isFull(q)) {
        printf("Queue is full. Cannot enqueue.\n");
        return;
    }
    if (isEmpty(q)) {
        q->front = 0;
    }
    q->rear++;
    q->arr[q->rear] = data;
}
int peek(Queue *q) {
    if (isEmpty(q)) {
        printf("Queue is empty. Cannot peek.\n");
        return -1; 
    }
    return q->arr[q->front];
}
int main() {
    Queue q;
    initializeQueue(&q);

    enqueue(&q, 10);
    enqueue(&q, 20);
    enqueue(&q, 30);

    printf("Front element of the queue: %d\n", peek(&q));
    return 0;
}
